// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

model User {
  id        String   @id @default(cuid())
  phone     String   @unique
  password  String
  name      String?
  isActive  Boolean  @default(false)
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Session   Session?

  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("session")
}

model Customer {
  id        String   @id @default(cuid())
  name      String
  phone     String
  address   String
  codes     Codes[]
  date      DateTime @db.DateTime(6)
  updatedAt DateTime @updatedAt
  createAt  DateTime @default(now())
}

model Codes {
  id         String   @id @default(cuid())
  value      String
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String
  updateAt   DateTime @updatedAt
  createAt   DateTime @default(now())
}

model Currency {
  id       String   @id @default(cuid())
  name     String
  symbol   String
  updateAt DateTime @updatedAt
  createAt DateTime @default(now())

  @@map("currency")
}

model ProductRoutes {
  id          String   @id @default(cuid())
  name        String
  description String
  updateAt    DateTime @updatedAt
  createAt    DateTime @default(now())
}

model Warehouse {
  id         String   @id @default(cuid())
  name       String   @db.VarChar(255)
  phone      String   @db.VarChar(50)
  address    String   @db.VarChar(500)
  currencies Json     @db.Json
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Document {
  id          String   @id @default(uuid())
  employeeId  String
  warehouseId String
  date        DateTime
  customerId  String?
  items       Item[]
  totalVolume Float
  totalWeight Float
  avgRatio    Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt()
}

model Item {
  id            String   @id @default(uuid())
  itemId        String // оригинальный id (item-1, item-2)
  name          String
  length        Int
  width         Int
  height        Int
  quantity      Int
  kgPerUnit     Float
  totalVolume   Float
  totalWeight   Float
  ratio         Float
  customerCode  String
  customerName  String
  productRoutes String
  shop          String?
  expense       Float?
  currency      String?
  note          String?
  document      Document @relation(fields: [documentId], references: [id])
  documentId    String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt()
}
